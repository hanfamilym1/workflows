name: 'üß™ E2E Tests - Cypress'

on:
  workflow_call:
    inputs:
      provider:
        required: true
        type: string
      record:
        required: false
        type: boolean
        default: true
      parallel-jobs:
        required: false
        type: number
        default: 5
    secrets:
      CYPRESS_PROJECT_ID:
        required: true
      CYPRESS_RECORD_KEY:
        required: true
      SITE:
        required: true
      VERCEL_PREVIEW_DEPLOYMENT_PASSWORD:
        required: false
      PERCY_TOKEN:
        required: false

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.save-matrix-value.outputs.result }}
    steps:
      - name: Generate matrix values
        run: ./generate_matrix.sh ${{ inputs.parallel-jobs }} > matrix.txt
      - name: Save matrix value
        id: save-matrix-value
        run: echo "result=$(cat matrix.txt)" >> $GITHUB_OUTPUT

  check-percy-token:
    env:
      percy-token: ${{ secrets.PERCY_TOKEN }}
    outputs:
      token-exists: ${{ steps.check-percy-token.outputs.result }}
    runs-on: ubuntu-latest
    steps:
      - id: check-percy-token
        name: Check if Percy token exists
        run: echo "result=${{ secrets.PERCY_TOKEN != '' }}" >> $GITHUB_OUTPUT

  # Nonce for re-runs: https://docs.percy.io/docs/parallel-test-suites#github-actions
  nonce:
    needs:
      - check-percy-token
    runs-on: ubuntu-latest
    if: ${{ needs.check-percy-token.outputs.token-exists == 'true' }}
    outputs:
      result: ${{ steps.nonce.outputs.result }}
    steps:
      - id: nonce
        # Don't use deprecated set-output as per https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
        run: echo "result=${{ github.run_id }}-$(date +%s)" >> $GITHUB_OUTPUT

  install-and-cache-dependencies:
    needs:
      - generate-matrix
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.2-slim-chrome103-ff102
      options: --user 1001
    steps:
      ## SETUP
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        id: setup-node-16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 'üöÄ Dependencies cache'
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 'üì¶ Install project dependencies'
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn --prefer-offline

      - name: 'üîç Print Cypress info'
        working-directory: './packages/web/'
        run: yarn cypress info

  wait-for-preview:
    needs:
      - install-and-cache-dependencies
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.wait-for-netflify-preview.outputs.url || steps.wait-for-vercel-preview.outputs.url }}
      vercel-jwt: ${{ steps.wait-for-vercel-preview.outputs.vercel_jwt }}
    steps:
      - name: '‚è≥ Wait for Vercel Preview'
        if: ${{ inputs.provider == 'vercel' }}
        uses: patrickedqvist/wait-for-vercel-preview@1d4a973cb668249d5fb0e34d04be05634e396a8b
        id: wait-for-vercel-preview
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 600
          vercel_password: ${{ secrets.VERCEL_PREVIEW_DEPLOYMENT_PASSWORD }}

      - name: '‚è≥ Wait for Netlify Preview'
        if: ${{ inputs.provider == 'netlify' }}
        uses: jlevy-io/wait-for-netlify-deploy-with-headers@3.0.3
        id: wait-for-netflify-preview
        with:
          site_id: ${{ secrets.NETLIFY_SITE_ID }}
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}


  cypress-ui-chrome-tests:
    if: ${{ needs.check-percy-token.outputs.token-exists == 'false' }}
    needs:
      - generate-matrix
      - check-percy-token
      - wait-for-preview
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.2-slim-chrome103-ff102
      options: --user 1001
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: ${{ needs.generate-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 'üöÄ Dependencies cache'
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 'üì¶ Install project dependencies'
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn --prefer-offline

      - name: 'üß™ Website Tests - Chrome'
        uses: cypress-io/github-action@v4
        with:
          install: false
          project: ./packages/web
          browser: chrome
          record: ${{ inputs.record }}
          parallel: true
          group: 'UI - Chrome'
        env:
          SITE: ${{ secrets.SITE }}
          CYPRESS_BASE_URL: ${{ needs.wait-for-preview.outputs.preview-url }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VERCEL_JWT: _vercel_jwt=${{ steps.wait-for-preview.outputs.vercel-jwt }}
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_AUTHOR: ${{ github.triggering_actor }}
          # Recommended: passing the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cypress-ui-chrome-tests-with-snapshots:
    if: ${{ needs.check-percy-token.outputs.token-exists == 'true' }}
    needs:
      - generate-matrix
      - check-percy-token
      - nonce
      - wait-for-preview
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.2-slim-chrome103-ff102
      options: --user 1001
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    steps:
      # Enforce label on PR to prevent unnecessary testing
      # - name: Enforce QA label on PR
      #   uses: mheap/github-action-required-labels@v2
      #   if: ${{ github.event_name == 'pull_request' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     mode: exactly
      #     count: 1
      #     labels: 'qa-ready'
      #     add_comment: true

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 'üöÄ Dependencies cache'
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 'üì¶ Install project dependencies'
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn --prefer-offline

      - name: 'üß™ Website Tests - Chrome'
        uses: cypress-io/github-action@v4
        with:
          install: false
          project: ./packages/web
          browser: chrome
          record: ${{ inputs.record }}
          parallel: true
          group: 'UI - Chrome'
        env:
          SITE: ${{ secrets.SITE }}
          CYPRESS_BASE_URL: ${{ needs.wait-for-preview.outputs.preview-url }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VERCEL_JWT: _vercel_jwt=${{ steps.wait-for-preview.outputs.vercel-jwt }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
          PERCY_PARALLEL_TOTAL: 5
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_AUTHOR: ${{ github.triggering_actor }}
          # Recommended: passing the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

