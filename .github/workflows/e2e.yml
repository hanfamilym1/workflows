name: 'üß™ E2E Tests - Cypress'

on:
  workflow_call:
    inputs:
      record:
        required: true
        type: boolean
      provider:
        required: true
        type: string
    secrets:
      CYPRESS_BASE_URL:
        required: true
      CYPRESS_PROJECT_ID:
        required: true
      CYPRESS_RECORD_KEY:
        required: true
      SITE:
        required: true
      VERCEL_PREVIEW_DEPLOYMENT_PASSWORD:
        required: true

jobs:
  # NOTE: ‚ö†Ô∏è this project is currently NOT using Percy
  #
  # Nonce for re-runs: https://docs.percy.io/docs/parallel-test-suites#github-actions
  # nonce:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     result: ${{ steps.nonce.outputs.result }}
  #   steps:
  #     - id: nonce
  #       # Don't use deprecated set-output as per https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
  #       run: echo "result=${{ github.run_id }}-$(date +%s)" >> $GITHUB_OUTPUT

  install-and-cache-dependencies:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.0-slim-chrome99-ff97
      options: --user 1001
    steps:
      # Enforce label on PR to prevent unnecessary testing
      # - name: Enforce QA label on PR
      #   uses: mheap/github-action-required-labels@v2
      #   if: ${{ github.event_name == 'pull_request' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     mode: exactly
      #     count: 1
      #     labels: 'qa-ready'
      #     add_comment: true

      ## SETUP
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        id: setup-node-16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 'üöÄ Dependencies cache'
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 'üì¶ Install project dependencies'
        run: yarn --prefer-offline

      - name: 'üîç Print Cypress info'
        working-directory: './packages/web/'
        run: yarn cypress info

  cypress-ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.0-slim-chrome99-ff97
      options: --user 1001
    needs:
      - install-and-cache-dependencies
      # - nonce
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]

    steps:
      ## SETUP
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: 'üöÄ Dependencies cache'
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 'üì¶ Install project dependencies'
        run: yarn --prefer-offline

      - name: '‚è≥ Wait for Vercel Preview'
        if: ${{ inputs.provider == 'vercel' }}
        uses: patrickedqvist/wait-for-vercel-preview@v1.2.0
        id: wait-for-vercel-preview
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 600
          vercel_password: ${{ secrets.VERCEL_PREVIEW_DEPLOYMENT_PASSWORD }}

      - name: '‚è≥ Wait for Netlify Preview'
        if: ${{ inputs.provider == 'netlify' }}
        uses: jlevy-io/wait-for-netlify-deploy-with-headers@3.0.2
        id: wait-for-netflify-preview
        with:
          site_id: ${{ secrets.NETLIFY_SITE_ID }}
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}

      - name: 'üß™ Website Tests - Chrome'
        uses: cypress-io/github-action@v4
        with:
          install: false
          project: ./packages/web
          browser: chrome
          record: ${{ inputs.record }}
          parallel: true
          group: 'UI - Chrome'
        env:
          SITE: ${{ secrets.SITE }}
          CYPRESS_BASE_URL: ${{ steps.wait-for-netflify-preview.outputs.url || steps.wait-for-vercel-preview.outputs.url }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VERCEL_JWT: _vercel_jwt=${{ steps.wait-for-vercel-preview.outputs.vercel_jwt }}
          # PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          # PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
          # PERCY_PARALLEL_TOTAL: 5
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          # Recommended: passing the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

